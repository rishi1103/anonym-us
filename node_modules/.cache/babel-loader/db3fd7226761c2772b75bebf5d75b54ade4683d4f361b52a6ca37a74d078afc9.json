{"ast":null,"code":"var _jsxFileName = \"/Users/rishipoonia/Downloads/Anonym-us/react-app/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport UserRegistrationScreen from './UserRegistrationScreen';\nimport UserLoginScreen from './UserLoginScreen';\nimport CreateThreadScreen from './CreateThreadScreen';\nimport ViewThreadScreen from './ViewThreadScreen';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// const App = () => {\n\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route exact path=\"/register\" component={UserRegistrationScreen} />\n//         <Route exact path=\"/login\" component={UserLoginScreen} />\n//         <Route exact path=\"/create\" component={CreateThreadScreen} />\n//         <Route exact path=\"/view/:threadId\" component={ViewThreadScreen} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// import UserRegistrationScreen from './UserRegistrationScreen';\n// import UserLoginScreen from './UserLoginScreen';\n// import CreateThreadScreen from './CreateThreadScreen';\n// import ViewThreadScreen from './ViewThreadScreen';\n\n// const Stack = createStackNavigator();\n\n// AppRegistry.registerComponent('MyApp', () => App);","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","Router","Route","Routes","Link","UserRegistrationScreen","UserLoginScreen","CreateThreadScreen","ViewThreadScreen","jsxDEV","_jsxDEV","render","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["/Users/rishipoonia/Downloads/Anonym-us/react-app/my-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n\nimport UserRegistrationScreen from './UserRegistrationScreen';\nimport UserLoginScreen from './UserLoginScreen';\nimport CreateThreadScreen from './CreateThreadScreen';\nimport ViewThreadScreen from './ViewThreadScreen';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n\n// const App = () => {\n  \n// };\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route exact path=\"/register\" component={UserRegistrationScreen} />\n//         <Route exact path=\"/login\" component={UserLoginScreen} />\n//         <Route exact path=\"/create\" component={CreateThreadScreen} />\n//         <Route exact path=\"/view/:threadId\" component={ViewThreadScreen} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n\n\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n\n// import UserRegistrationScreen from './UserRegistrationScreen';\n// import UserLoginScreen from './UserLoginScreen';\n// import CreateThreadScreen from './CreateThreadScreen';\n// import ViewThreadScreen from './ViewThreadScreen';\n\n// const Stack = createStackNavigator();\n\n// AppRegistry.registerComponent('MyApp', () => App);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB;AACA,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAE/E,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,gBAAgB,MAAM,oBAAoB;;AAEjD;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGAZ,QAAQ,CAACa,MAAM,eAACD,OAAA,CAACX,GAAG;EAAAa,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AA2CzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;;AAIA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}