{"ast":null,"code":"var _jsxFileName = \"/Users/rishipoonia/Downloads/Anonym-us/react-app/my-app/src/CreateThreadScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, TextInput, Button } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateThreadScreen = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const handleCreateThread = () => {\n    // Handle thread creation logic here\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Thread Title\",\n      value: title,\n      onChangeText: setTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Thread Content\",\n      multiline: true,\n      value: content,\n      onChangeText: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Create Thread\",\n      onPress: handleCreateThread\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateThreadScreen, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n_c = CreateThreadScreen;\nexport default CreateThreadScreen;\nvar _c;\n$RefreshReg$(_c, \"CreateThreadScreen\");","map":{"version":3,"names":["React","useState","View","TextInput","Button","jsxDEV","_jsxDEV","CreateThreadScreen","_s","title","setTitle","content","setContent","handleCreateThread","children","placeholder","value","onChangeText","fileName","_jsxFileName","lineNumber","columnNumber","multiline","onPress","_c","$RefreshReg$"],"sources":["/Users/rishipoonia/Downloads/Anonym-us/react-app/my-app/src/CreateThreadScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button } from 'react-native';\n\nconst CreateThreadScreen = () => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleCreateThread = () => {\n    // Handle thread creation logic here\n  };\n\n  return (\n    <View>\n      <TextInput\n        placeholder=\"Thread Title\"\n        value={title}\n        onChangeText={setTitle}\n      />\n      <TextInput\n        placeholder=\"Thread Content\"\n        multiline\n        value={content}\n        onChangeText={setContent}\n      />\n      <Button title=\"Create Thread\" onPress={handleCreateThread} />\n    </View>\n  );\n};\n\nexport default CreateThreadScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;EAAA,CACD;EAED,oBACEP,OAAA,CAACJ,IAAI;IAAAY,QAAA,gBACHR,OAAA,CAACH,SAAS;MACRY,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEP,KAAM;MACbQ,YAAY,EAAEP;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFf,OAAA,CAACH,SAAS;MACRY,WAAW,EAAC,gBAAgB;MAC5BO,SAAS;MACTN,KAAK,EAAEL,OAAQ;MACfM,YAAY,EAAEL;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFf,OAAA,CAACF,MAAM;MAACK,KAAK,EAAC,eAAe;MAACc,OAAO,EAAEV;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEX,CAAC;AAACb,EAAA,CAxBID,kBAAkB;AAAAiB,EAAA,GAAlBjB,kBAAkB;AA0BxB,eAAeA,kBAAkB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}