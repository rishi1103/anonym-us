{"ast":null,"code":"var _jsxFileName = \"/Users/rishipoonia/Downloads/Anonym-us/react-app/my-app/src/CreateThreadScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/CreateThreadScreen.css';\nimport app from './firebase.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateThreadScreen = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  var ThreadsDB = app.database().ref('Threads');\n  const handleCreateThread = () => {\n    // Perform thread creation logic here\n    if (title && content) {\n      var newThread = ThreadsDB.push();\n      newThread.set({\n        id: ThreadsDB.length + 1,\n        title: title,\n        comments: null\n      });\n      // Process the thread data, for example, send a request to an API or save to the database\n      console.log('Thread created successfully!');\n      // Optionally, you can redirect the user to a different page after successful thread creation\n    } else {\n      console.log('Please fill in all the required fields');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-thread-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Thread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-thread-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Thread Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"create-thread-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Thread Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        className: \"create-thread-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateThread,\n        className: \"create-thread-button\",\n        children: \"Create Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateThreadScreen, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n_c = CreateThreadScreen;\nexport default CreateThreadScreen;\nvar _c;\n$RefreshReg$(_c, \"CreateThreadScreen\");","map":{"version":3,"names":["React","useState","app","jsxDEV","_jsxDEV","CreateThreadScreen","_s","title","setTitle","content","setContent","ThreadsDB","database","ref","handleCreateThread","newThread","push","set","id","length","comments","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/rishipoonia/Downloads/Anonym-us/react-app/my-app/src/CreateThreadScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './css/CreateThreadScreen.css';\nimport app from './firebase.js'\n\nconst CreateThreadScreen = () => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  var ThreadsDB = app.database().ref('Threads');\n\n  const handleCreateThread = () => {\n    // Perform thread creation logic here\n    if (title && content) {\n      var newThread = ThreadsDB.push();\n\n      newThread.set({\n        id : ThreadsDB.length + 1,\n        title : title,\n        comments: null,\n      });\n      // Process the thread data, for example, send a request to an API or save to the database\n      console.log('Thread created successfully!');\n      // Optionally, you can redirect the user to a different page after successful thread creation\n    } else {\n      console.log('Please fill in all the required fields');\n    }\n  };\n\n  return (\n    <div className=\"create-thread-container\">\n      <h2>Create Thread</h2>\n      <form className=\"create-thread-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Thread Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"create-thread-input\"\n        />\n        <textarea\n          placeholder=\"Thread Content\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          className=\"create-thread-textarea\"\n        />\n        <button onClick={handleCreateThread} className=\"create-thread-button\">Create Thread</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateThreadScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,8BAA8B;AACrC,OAAOC,GAAG,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,IAAIU,SAAS,GAAGT,GAAG,CAACU,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,SAAS,CAAC;EAE7C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,IAAIP,KAAK,IAAIE,OAAO,EAAE;MACpB,IAAIM,SAAS,GAAGJ,SAAS,CAACK,IAAI,CAAC,CAAC;MAEhCD,SAAS,CAACE,GAAG,CAAC;QACZC,EAAE,EAAGP,SAAS,CAACQ,MAAM,GAAG,CAAC;QACzBZ,KAAK,EAAGA,KAAK;QACba,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF;MACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;IACF,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxB,OAAA;MAAMmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAClCpB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAExB,KAAM;QACbyB,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CR,SAAS,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFxB,OAAA;QACE0B,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAEtB,OAAQ;QACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CR,SAAS,EAAC;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFxB,OAAA;QAAQ+B,OAAO,EAAErB,kBAAmB;QAACS,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7CID,kBAAkB;AAAA+B,EAAA,GAAlB/B,kBAAkB;AA+CxB,eAAeA,kBAAkB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}